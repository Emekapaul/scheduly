{"ast":null,"code":"var _jsxFileName = \"/home/ifyzi/portfolio/scheduly/front-end/src/pages/CalendarPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarPage() {\n  _s();\n  const [events, setEvents] = useState([{\n    title: 'Event 1',\n    start: '2024-09-01',\n    end: '2024-09-03'\n  }, {\n    title: 'Event 2',\n    start: '2024-09-07',\n    end: '2024-09-10'\n  }, {\n    title: 'Event 3',\n    start: '2024-09-18',\n    end: '2024-09-20'\n  }, {\n    title: 'Event 4',\n    start: '2024-09-24',\n    end: '2024-09-27'\n  }]);\n\n  /* const handleDateClick = (info) => {\n     // Prompt user to add a new event or  Example of clicking a date to add an event\n     const title = prompt('Event Title:');\n     if (title) {\n       setEvents([...events, { title, date: info.dateStr }]);\n     }\n   };\n     const handleEventDrop = (info) => {\n     // Update the event date when dropped\n     const updatedEvents = events.map((event) => {\n       if (event.title === info.event.title) {\n         return { ...event, date: info.event.startStr };\n       }\n       return event;\n     });\n     setEvents(updatedEvents);\n   };\n     const handleEventClick = (info) => {\n     // Delete event when clicked\n     const updatedEvents = events.filter((event) => event.title !== info.event.title);\n     setEvents(updatedEvents);\n   };*/\n\n  const handleDateClick = info => {\n    alert('Date clicked: ' + info.dateStr);\n  };\n  const handleEventClick = info => {\n    alert('Event clicked: ' + info.event.title);\n  };\n  const handleEventDrop = info => {\n    alert(info.event.title + ' was dropped on ' + info.event.start.toISOString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Planning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin] //  Add desired plugins\n      ,\n      initialView: \"dayGridMonth\" // Default view (e.g., month view)\n      ,\n      events: events // Events to display\n      ,\n      dateClick: handleDateClick // Handle clicks on dates\n      ,\n      eventClick: handleEventClick // Handle clicks on events\n      ,\n      eventDrop: handleEventDrop // Handle event drops\n      ,\n      editable: true // Allows drag and drop\n      ,\n      selectable: true // Allows selection of dates\n      ,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      } // Add buttons to change view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarPage, \"w5BAk5yICNt1nOOGPt721J0FOcU=\");\n_c = CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","jsxDEV","_jsxDEV","CalendarPage","_s","events","setEvents","title","start","end","handleDateClick","info","alert","dateStr","handleEventClick","event","handleEventDrop","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","dateClick","eventClick","eventDrop","editable","selectable","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["/home/ifyzi/portfolio/scheduly/front-end/src/pages/CalendarPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\n\nexport default function CalendarPage() {\n  const [events, setEvents] = useState([\n    { title: 'Event 1', start: '2024-09-01', end: '2024-09-03' },\n    { title: 'Event 2', start: '2024-09-07', end: '2024-09-10' },\n    { title: 'Event 3', start: '2024-09-18', end: '2024-09-20' },\n    { title: 'Event 4', start: '2024-09-24', end: '2024-09-27' },\n  ]);\n\n  /* const handleDateClick = (info) => {\n     // Prompt user to add a new event or  Example of clicking a date to add an event\n     const title = prompt('Event Title:');\n     if (title) {\n       setEvents([...events, { title, date: info.dateStr }]);\n     }\n   };\n \n   const handleEventDrop = (info) => {\n     // Update the event date when dropped\n     const updatedEvents = events.map((event) => {\n       if (event.title === info.event.title) {\n         return { ...event, date: info.event.startStr };\n       }\n       return event;\n     });\n     setEvents(updatedEvents);\n   };\n \n   const handleEventClick = (info) => {\n     // Delete event when clicked\n     const updatedEvents = events.filter((event) => event.title !== info.event.title);\n     setEvents(updatedEvents);\n   };*/\n\n  const handleDateClick = (info) => {\n    alert('Date clicked: ' + info.dateStr);\n  };\n\n  const handleEventClick = (info) => {\n    alert('Event clicked: ' + info.event.title);\n  };\n\n  const handleEventDrop = (info) => {\n    alert(info.event.title + ' was dropped on ' + info.event.start.toISOString());\n  };\n\n  return (\n    <div className='calendar'>\n      <h1>My Planning</h1>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin]} //  Add desired plugins\n        initialView='dayGridMonth' // Default view (e.g., month view)\n        events={events} // Events to display\n        dateClick={handleDateClick} // Handle clicks on dates\n        eventClick={handleEventClick} // Handle clicks on events\n        eventDrop={handleEventDrop} // Handle event drops\n        editable={true} // Allows drag and drop\n        selectable={true} // Allows selection of dates\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        }}  // Add buttons to change view\n      />\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CACnC;IAAEY,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,YAAY;IAAEC,GAAG,EAAE;EAAa,CAAC,EAC5D;IAAEF,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,YAAY;IAAEC,GAAG,EAAE;EAAa,CAAC,EAC5D;IAAEF,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,YAAY;IAAEC,GAAG,EAAE;EAAa,CAAC,EAC5D;IAAEF,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,YAAY;IAAEC,GAAG,EAAE;EAAa,CAAC,CAC7D,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChCC,KAAK,CAAC,gBAAgB,GAAGD,IAAI,CAACE,OAAO,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,IAAI,IAAK;IACjCC,KAAK,CAAC,iBAAiB,GAAGD,IAAI,CAACI,KAAK,CAACR,KAAK,CAAC;EAC7C,CAAC;EAED,MAAMS,eAAe,GAAIL,IAAI,IAAK;IAChCC,KAAK,CAACD,IAAI,CAACI,KAAK,CAACR,KAAK,GAAG,kBAAkB,GAAGI,IAAI,CAACI,KAAK,CAACP,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC;EAC/E,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA,CAACN,YAAY;MACX4B,OAAO,EAAE,CAAC3B,aAAa,EAAEC,cAAc,EAAEE,UAAU,EAAED,iBAAiB,CAAE,CAAC;MAAA;MACzE0B,WAAW,EAAC,cAAc,CAAC;MAAA;MAC3BpB,MAAM,EAAEA,MAAO,CAAC;MAAA;MAChBqB,SAAS,EAAEhB,eAAgB,CAAC;MAAA;MAC5BiB,UAAU,EAAEb,gBAAiB,CAAC;MAAA;MAC9Bc,SAAS,EAAEZ,eAAgB,CAAC;MAAA;MAC5Ba,QAAQ,EAAE,IAAK,CAAC;MAAA;MAChBC,UAAU,EAAE,IAAK,CAAC;MAAA;MAClBC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE,CAAE;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAjEuBD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}